using Gtk 4.0;
using Adw 1;

template $FieldMonitorConnectionView: Adw.Bin {
    title: bind window_title.title bidirectional;
    subtitle: bind window_title.subtitle bidirectional;
    notify::dynamic-resize => $on_self_dynamic_resize_changed() swapped;
    notify::scale-to-window => $on_self_scale_to_window_changed() swapped;

    child: Overlay {
        // This great idea and base of implementation comes rom Showtime!

        [overlay]
        Revealer header_revealer_start {
            transition-type: crossfade;
            valign: start;
            halign: start;
            reveal-child: bind template.reveal-osd-controls bidirectional;
            can-target: bind template.reveal-osd-controls bidirectional;

            WindowHandle {
                Box header_start {
                    margin-top: 6;
                    margin-bottom: 3;
                    margin-start: 6;
                    margin-end: 3;
                    spacing: 6;

                    WindowControls window_controls_start {
                        halign: start;
                        visible: bind window_controls_start.empty inverted;
                        side: start;

                        styles [
                            "window-controls-osd"
                        ]
                    }

                    Button button_fullscreen {
                        hexpand: true;
                        valign: start;
                        halign: start;
                        icon-name: "arrows-pointing-outward-symbolic";
                        tooltip-text: _("Toggle Fullscreen");
                        action-name: "win.fullscreen";

                        styles [
                            "header-osd",
                            "circular"
                        ]
                    }

                    Button {
                        hexpand: true;
                        valign: start;
                        halign: start;
                        icon-name: "view-grid-symbolic";
                        tooltip-text: _("Open Connections");
                        action-name: "overview.open";

                        styles [
                            "header-osd",
                            "circular"
                        ]
                    }
                }
            }
        }

        [overlay]
        Revealer header_revealer_middle {
            transition-type: crossfade;
            valign: start;
            halign: center;
            reveal-child: bind template.reveal-osd-controls bidirectional;
            can-target: bind template.reveal-osd-controls bidirectional;

            WindowHandle {
                Box {
                    spacing: 6;

                    Revealer osd_title_revealer {
                        transition-type: crossfade;
                        valign: start;
                        halign: center;
                        reveal-child: true;

                        Button {
                            accessible-role: label;
                            focusable: false;

                            child: Adw.WindowTitle window_title {};

                            halign: center;

                            styles [
                                "header-osd",
                                "nohover",
                                "circular"
                            ]
                        }

                        styles [
                            "window-title"
                        ]
                    }
                }
            }
        }

        [overlay]
        Revealer header_revealer_end {
            transition-type: crossfade;
            valign: start;
            halign: end;
            reveal-child: bind template.reveal-osd-controls bidirectional;
            can-target: bind template.reveal-osd-controls bidirectional;

            WindowHandle {
                Box header_end {
                    margin-top: 6;
                    margin-bottom: 3;
                    margin-end: 6;
                    margin-start: 3;
                    spacing: 6;

                    Button {
                        hexpand: true;
                        valign: start;
                        halign: end;
                        icon-name: "go-home-symbolic";
                        tooltip-text: _("Connection List");
                        action-name: "win.show-connection-list";

                        styles [
                            "header-osd",
                            "circular"
                        ]
                    }

                    MenuButton {
                        hexpand: true;
                        valign: start;
                        halign: end;
                        primary: true;
                        icon-name: 'view-more-symbolic';
                        tooltip-text: _('Menu');
                        menu-model: on_connection_menu;

                        styles [
                            "header-osd",
                            "circular"
                        ]
                    }

                    WindowControls window_controls_end {
                        halign: end;
                        visible: bind window_controls_end.empty inverted;
                        side: end;

                        styles [
                            "window-controls-osd"
                        ]
                    }
                }
            }
        }

        Stack outer_stack {
            vexpand: true;
            hexpand: true;
            transition-type: crossfade;

            StackPage {
                name: "status";

                child: Adw.Bin {
                    vexpand: true;
                    hexpand: true;

                    child: Box {
                        orientation: vertical;

                        WindowHandle {
                            height-request: 46;
                            hexpand: true;
                            vexpand: false;
                        }

                        Stack status_stack {
                            vexpand: true;
                            hexpand: true;
                            transition-type: crossfade;

                            StackPage {
                                name: "loading";

                                child: Adw.StatusPage loading_status_page {
                                    paintable: Adw.SpinnerPaintable {
                                        widget: loading_status_page;
                                    };

                                    title: _("Connecting...");
                                };
                            }

                            StackPage {
                                name: "disconnected";

                                child: Adw.StatusPage error_status_page {
                                    icon-name: "external-display-nointernal-symbolic";

                                    child: Box {
                                        halign: center;
                                        orientation: horizontal;
                                        spacing: 6;

                                        Gtk.Button {
                                            label: _("Close");
                                            halign: center;
                                            action-name: "tab.close";

                                            /*styles [
                                                "destructive-action"
                                            ]*/
                                        }

                                        /*Gtk.Button {
                                            label: _("Reconnect");
                                            halign: center;
                                            action-name: "view.reconnect";
                                        }*/
                                    };
                                };
                            }
                        }
                    };

                    styles [
                        "connection-view-status"
                    ]
                };
            }

            StackPage {
                name: "connection";

                child: Overlay {
                    [overlay]
                    Revealer header_backdrop {
                        transition-type: crossfade;
                        reveal-child: bind template.reveal-osd-controls bidirectional;
                        halign: fill;
                        valign: start;
                        can-focus: false;
                        can-target: false;

                        Adw.Bin header_gradient {
                            height-request: 96;
                            halign: fill;
                            valign: start;
                            can-focus: false;
                            can-target: false;

                            styles [
                                "header-bg-gradient"
                            ]
                        }
                    }

                    [overlay]
                    $FieldMonitorFocusGrabber focus_grabber {
                        notify::grabbed => $on_focus_grabber_grabbed_changed() swapped;
                        vexpand: true;
                        hexpand: true;
                    }

                    Adw.Bin display_bin {
                        vexpand: true;
                        hexpand: true;
                    }
                };
            }
        }
    };
}

menu on_connection_menu {
    section {
        item {
            label: _('_Dynamic Resize');
            action: 'view.dynamic-resize';
            hidden-when: "action-disabled";
        }

        item {
            label: _('_Scale to Window');
            action: 'view.scale-to-window';
            hidden-when: "action-disabled";
        }
    }

    section {
        item {
            label: _('_Resize Window to Screen');
            action: 'view.fit-to-screen';
            hidden-when: "action-disabled";
        }
    }

    section {
        item {
            label: _('_Move to New Window');
            action: 'tab.move-to-new-window';
        }

        item {
            label: _('_Close Connection');
            action: 'tab.close';
        }
    }

    section {
        item {
            label: _('_New Window');
            action: 'app.new-window';
        }

        item {
            label: _('_Preferences');
            action: 'app.preferences';
        }

        item {
            label: _('_Keyboard Shortcuts');
            action: 'win.show-help-overlay';
        }

        item {
            label: _('_About Field Monitor');
            action: 'app.about';
        }
    }
}
